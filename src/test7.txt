** 1.1 **
** Valid Identifiers**
abc
a
AzB
A1
BC_A
A1_
Ab_1
A__12b
ab_
fals
fAlse
false2
wxy
wxY
computeSum
C
A_1
a2cD2__
abc_123
abc123

** Invalid identifiers **
1abc
_Abc
true
false
:ab
_2ab
2_ab
SWITCH

** 1.2 **
** White spaces, separators and commas **
false:x
falsex
fa lse
false	:	false
true	:abc
abc:SWITCH
xy	<=5

** 1.3 **
** Valid Numbers **
234
1
45
90123
23.89
908.567
25.0
0.25
123.2E+6
124.2E-1
124.2e-1
124.23E2
1.24E+1

** Invalid Numbers **
26.
.25
.124E+2

** 2.1 **
** data types **
declare C: array[5..10] of real
declare c: array[a..b] of real
declare B: array[5..b] of real
int k=7, x=1;
C[k]
C[x]	// Invalid as x is out of the range 5 to 10 for array C
C[5]
declare P, Q, R: array[3..9] of real
P[7] + Q[3]
P[4]/3
P := Q
P[P[0]]
P[1..2..3]

** 2.2 **
** Expressions **
15+29-12*2
15+(29-12)*2
((x>=10 AND y<0) OR x<10)

** 2.3 **
switch(4)
switch(true)

